filter products shop page

{clothes_category === null ? (
        <div className="product-list">
          {Products.map((product) => (
            <ProductCard key={product.id} product={product} />
          ))}
        </div>
      ) : (
        <div className="product-list">
          {products
            .filter((prod) => prod.clothesCategories == clothes_category)
            .map((product) => (
              <ProductCard key={product.id} product={product} />
            ))}
        </div>
      )}

home 

  const shades = [
    { id: 0, clothesCategories: "Men", image: model },
    { id: 1, clothesCategories: "Women", image: model },
    { id: 2, clothesCategories: "Boys", image: model },
    { id: 3, clothesCategories: "Girls", image: model },
  ];



      home filter button

        <Link className="filter-link" to={`/shop?categories=${"men"}`}>
          New
        </Link>





         <div className="shop-container">
        {Products.length > 0 ? (
          <div className="product-list">
            {Products.map((product) => (
              <ProductCard key={product.id} product={product} />
            ))}
          </div>
        ) : (
          <p className="no-Products-message">No Products available.</p>
        )}
      </div>





      login frontend ready


      import React, { useState } from "react";
import "../CSS/Signin_up.css";
import { useNavigate } from "react-router-dom";

export default function Signin_up({ isModal }) {
  const [isLoginVisible, setIsLoginVisible] = useState(true);
  const [isRegisterVisible, setIsRegisterVisible] = useState(false);
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();

    // Create a FormData object
    const formData = new FormData();
    formData.append("username", username); // Append your data (like 'name' field)
    formData.append("password", password); // Append your data (like 'name' field)

    // Send data to PHP via fetch
    fetch("process.php", {
      method: "POST",
      body: formData,
    })
      .then((response) => response.text()) // Process the response as text
      .then((data) => {
        console.log("Success:", data); // Handle the response from PHP
      })
      .catch((error) => {
        console.error("Error:", error); // Handle any errors
      });
  };

  const toggleViewLogin = () => {
    setIsLoginVisible(!isLoginVisible);
    setIsRegisterVisible(!isRegisterVisible);
  };

  const toggleViewRegister = () => {
    setIsRegisterVisible(!isRegisterVisible);
    setIsLoginVisible(!isLoginVisible);
  };
  const navigate = useNavigate();

  const handleCloseModal = () => {
    navigate(-1);
  };
  return (
    <div className={`signin_up-modal ${isModal ? "modal-open" : ""}`}>
      <div className="modal-overlay" onClick={handleCloseModal}></div>
      <div className="Signin_up">
        <div className="main">
          <div className={`register ${!isLoginVisible ? "active" : ""}`}>
            {/* signup */}
            <form>
              <button
                type="button"
                onClick={toggleViewRegister}
                className="toggle-btn"
              >
                Login
              </button>

              <input type="text" name="txt" placeholder="User name" required />
              <input type="email" name="email" placeholder="Email" required />
              <input
                type="number"
                name="broj"
                placeholder="BrojTelefona"
                required
              />
              <input
                type="password"
                name="pswd"
                placeholder="Password"
                required
              />
              <button type="submit">Sign up</button>
            </form>
            {/* login page */}
          </div>
          <div className={`login ${isRegisterVisible ? "active" : ""}`}>
            <form onSubmit={handleSubmit}>
              <button
                type="button"
                onClick={toggleViewLogin}
                className="toggle-btn"
              >
                Sign up
              </button>

              <input
                type="email"
                name="email"
                placeholder="Email"
                required
                onChange={(e) => setUsername(e.target.value)}
              />
              <input
                type="password"
                name="pswd"
                placeholder="Password"
                required
                onChange={(e) => setPassword(e.target.value)}
                //
              />
              <button type="submit">Login</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
}




